/*****************************************************************************
 * Project: RooFit                                                           *
 * Package: RooFitModels                                                     *
 *    File: $Id: RooErf.rdl,v 1.2 2007/07/09 13:04:52 xs32 Exp xs32 $
 * Authors:                                                                  *
 *   WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu       *
 *   DK, David Kirkby,    UC Irvine,         dkirkby@uci.edu                 *
 *                                                                           *
 * Copyright (c) 2000-2002, Regents of the University of California          *
 *                          and Stanford University. All rights reserved.    *
 *                                                                           *
 * Redistribution and use in source and binary forms,                        *
 * with or without modification, are permitted according to the terms        *
 * listed in LICENSE (http://roofit.sourceforge.net/license.txt)             *
 *****************************************************************************/
#ifndef ROO_ERF
#define ROO_ERF

#include "RooFitCore/RooAbsPdf.hh"
#include "RooFitCore/RooRealProxy.hh"

class RooRealVar;
class RooAbsReal;

class RooErf : public RooAbsPdf {
public:
  RooErf(const char *name, const char *title,
		 RooAbsReal& _x, RooAbsReal& _m, RooAbsReal& _s);
  RooErf(const RooErf& other, const char* name=0);
  virtual TObject* clone(const char* newname) const { return new RooErf(*this,newname); }
  inline virtual ~RooErf() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:
  RooRealProxy x;
  RooRealProxy m;
  RooRealProxy s;

  Double_t evaluate() const;

private:
  ClassDef(RooErf,0) // Exponential PDF
};

#endif
